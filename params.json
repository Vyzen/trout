{"name":"Trout","tagline":"Simple objects for my own funsies","body":"Trout\r\n-----\r\n\r\nA small library of code for my own personal funsies.\r\n\r\nCurrently consists of four java trees:\r\n\r\n+ com.eigenvektor.graph -- A package for representing directed, weighted graphs.\r\n+ com.eignevketor.tree -- A package for representing weighted n-ary trees.\r\n+ com.eigenvektor.matrix -- A basic matrix manipulation package.\r\n+ com.eigenvektor.amq -- An approximate membership query package including a Bloom filter and a quotient filter.\r\n\r\nAnd five Scala trees:\r\n\r\n+ com.eigenvektor.amq -- Wrappers and implicits for the Java amq package.\r\n+ com.eigenvektor.matrix -- Wrappers and implicits for the Java matrix package.\r\n+ com.eigenvektor.priorityqueue -- A native Scala fully-persistent priority queue implementation backed by either a standard binomial heap or a skew binomial heap.\r\n+ com.eigenvektor.collections -- Implementations of a queue and List that, in addition to their O(1) base operations, also support log(n) random access.\r\n+ com.eigenvektor.graph -- A different directed graph and tree package designed in a more scala-y way.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}